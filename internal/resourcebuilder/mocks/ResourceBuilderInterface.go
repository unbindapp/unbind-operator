// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	context "context"

	corev1 "k8s.io/api/core/v1"

	logr "github.com/go-logr/logr"

	mock "github.com/stretchr/testify/mock"

	networkingv1 "k8s.io/api/networking/v1"

	runtime "k8s.io/apimachinery/pkg/runtime"

	v1 "k8s.io/api/apps/v1"
)

// ResourceBuilderInterface is an autogenerated mock type for the ResourceBuilderInterface type
type ResourceBuilderInterface struct {
	mock.Mock
}

// BuildDatabaseObjects provides a mock function with given fields: ctx, logger
func (_m *ResourceBuilderInterface) BuildDatabaseObjects(ctx context.Context, logger logr.Logger) ([]runtime.Object, error) {
	ret := _m.Called(ctx, logger)

	if len(ret) == 0 {
		panic("no return value specified for BuildDatabaseObjects")
	}

	var r0 []runtime.Object
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, logr.Logger) ([]runtime.Object, error)); ok {
		return rf(ctx, logger)
	}
	if rf, ok := ret.Get(0).(func(context.Context, logr.Logger) []runtime.Object); ok {
		r0 = rf(ctx, logger)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]runtime.Object)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, logr.Logger) error); ok {
		r1 = rf(ctx, logger)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BuildDeployment provides a mock function with no fields
func (_m *ResourceBuilderInterface) BuildDeployment() (*v1.Deployment, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BuildDeployment")
	}

	var r0 *v1.Deployment
	var r1 error
	if rf, ok := ret.Get(0).(func() (*v1.Deployment, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *v1.Deployment); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.Deployment)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BuildIngress provides a mock function with no fields
func (_m *ResourceBuilderInterface) BuildIngress() (*networkingv1.Ingress, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BuildIngress")
	}

	var r0 *networkingv1.Ingress
	var r1 error
	if rf, ok := ret.Get(0).(func() (*networkingv1.Ingress, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *networkingv1.Ingress); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*networkingv1.Ingress)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BuildService provides a mock function with no fields
func (_m *ResourceBuilderInterface) BuildService() (*corev1.Service, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BuildService")
	}

	var r0 *corev1.Service
	var r1 error
	if rf, ok := ret.Get(0).(func() (*corev1.Service, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *corev1.Service); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*corev1.Service)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewResourceBuilderInterface creates a new instance of ResourceBuilderInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewResourceBuilderInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ResourceBuilderInterface {
	mock := &ResourceBuilderInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
